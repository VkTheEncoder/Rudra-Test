"2nd Edition"
""
""
""
""
"JAVA for"
"Beginners"
""
""
""
""
"An introductory course for Advanced IT Students and those who would   Riccardo"
"like to learn the Java programming language."
"Flask"
"                          JAVA for Beginners"
""
"Contents"
"Introduction ............................................................................................................................................................ 5"
"About JAVA ............................................................................................................................................................. 5"
"OOP – Object Oriented Programming .................................................................................................................... 5"
"Part 1 - Getting Started ........................................................................................................................................... 6"
"The Java Development Kit – JDK ........................................................................................................................ 6"
"My first Java program......................................................................................................................................... 6"
"Using an IDE ....................................................................................................................................................... 7"
"Variables and Data Types ....................................................................................................................................... 8"
"Variables ............................................................................................................................................................. 8"
" Test your skills – Example3................................................................................................................................ 8"
"Mathematical Operators .................................................................................................................................... 9"
"Logical Operators ............................................................................................................................................... 9"
"Character Escape Codes ................................................................................................................................... 11"
"Test your skills – Example7............................................................................................................................... 12"
"Data Types ........................................................................................................................................................ 13"
"Introducing Control Statements ....................................................................................................................... 16"
"Blocks of Code .................................................................................................................................................. 18"
"Test your skills – Example14 ................................................................................................................................. 18"
"The Math Class ................................................................................................................................................. 19"
"Scope and Lifetime of Variables ....................................................................................................................... 20"
"Type Casting and Conversions .......................................................................................................................... 21"
"Console Input ................................................................................................................................................... 24"
"Using the Keyboard Class ............................................................................................................................. 24"
"Using the Scanner Class ............................................................................................................................... 33"
"Using Swing Components ............................................................................................................................ 34"
"Part 2 - Advanced Java Programming ................................................................................................................... 35"
"Control Statements - The if Statement ................................................................................................................. 35"
"Guessing Game (Guess.java) ............................................................................................................................ 36"
"Nested if ............................................................................................................................................................... 37"
"Guessing Game v.3 ........................................................................................................................................... 37"
"if-else-if Ladder ..................................................................................................................................................... 38"
"Ternary (?) Operator ............................................................................................................................................. 39"
"switch Statement (case of) ................................................................................................................................... 41"
"Nested switch ....................................................................................................................................................... 45"
"Mini-Project – Java Help System (Help.java) ........................................................................................................ 45"
"Complete Listing .......................................................................................................................................... 46"
""
"Riccardo Flask                                                                                                                                         2|Page"
"                          JAVA for Beginners"
""
"The for Loop.......................................................................................................................................................... 48"
"Multiple Loop Control Variable ........................................................................................................................ 50"
"Terminating a loop via user intervention ......................................................................................................... 50"
"Interesting For Loop Variations ........................................................................................................................ 51"
"Infinite Loops .................................................................................................................................................... 52"
"No ‘Body’ Loops................................................................................................................................................ 52"
"Declaring variables inside the loop .................................................................................................................. 52"
"Enhanced For loop ........................................................................................................................................... 53"
"The While Loop ..................................................................................................................................................... 54"
"The do-while Loop ............................................................................................................................................ 55"
"Mini-Project 2– Java Help System (Help2.java) .................................................................................................... 58"
"Complete listing ........................................................................................................................................... 59"
"Using Break to Terminate a Loop ......................................................................................................................... 62"
"Terminating a loop with break and use labels to carry on execution .............................................................. 63"
"Use of Continue (complement of Break) .............................................................................................................. 66"
"Continue + Label............................................................................................................................................... 67"
"Mini-Project 3– Java Help System (Help3.java) .................................................................................................... 68"
"Complete Listing .......................................................................................................................................... 68"
"Nested Loops ........................................................................................................................................................ 71"
"Class Fundamentals .............................................................................................................................................. 72"
"Definition .............................................................................................................................................................. 72"
"The Vehicle Class .............................................................................................................................................. 72"
"Using the Vehicle class ................................................................................................................................. 73"
"Creating more than one instance ................................................................................................................ 73"
"Creating Objects ................................................................................................................................................... 74"
"Reference Variables and Assignment ................................................................................................................... 74"
"Methods ............................................................................................................................................................... 75"
"Returning from a Method ................................................................................................................................ 76"
"Returning a Value ............................................................................................................................................. 77"
"Methods which accept Parameters: ................................................................................................................ 79"
"Project: Creating a Help class from the Help3.java .......................................................................................... 83"
"Method helpon( ) ......................................................................................................................................... 83"
"Method showmenu( ) .................................................................................................................................. 84"
"Method isvalid( ) .......................................................................................................................................... 85"
"Class Help ..................................................................................................................................................... 85"
"Main Program: ............................................................................................................................................. 87"
"Constructors ......................................................................................................................................................... 88"
""
"Riccardo Flask                                                                                                                                        3|Page"
"                          JAVA for Beginners"
""
"Constructor having parameters ....................................................................................................................... 89"
"Overloading Methods and Constructors .......................................................................................................... 90"
"Method Overloading .................................................................................................................................... 90"
"Automatic Type Conversion for Parameters of overloaded Methods ......................................................... 92"
"Overloading Constructors ............................................................................................................................ 94"
"Access Specifiers: public and private .................................................................................................................... 96"
"Arrays and Strings ............................................................................................................................................... 101"
"Arrays .................................................................................................................................................................. 101"
"One-dimensional Arrays ................................................................................................................................. 101"
"Sorting an Array – The Bubble Sort ................................................................................................................ 103"
"Two-Dimensional Arrays: ............................................................................................................................... 104"
"Different syntax used to declare arrays: .................................................................................................... 105"
"Array References:....................................................................................................................................... 106"
"The Length Variable: .................................................................................................................................. 107"
"Using Arrays to create a Queue data structure ** .................................................................................... 110"
"The Enhanced ‘for’ Loop: ........................................................................................................................... 113"
"Strings ................................................................................................................................................................. 114"
"Using String Methods ..................................................................................................................................... 115"
"String Arrays ................................................................................................................................................... 117"
"Vector and ArrayList ........................................................................................................................................... 122"
"Employee.java ............................................................................................................................................ 125"
"ComparableDemo.java .............................................................................................................................. 126"
"File Operations in Java ........................................................................................................................................ 134"
"Template to read data from disk .................................................................................................................... 138"
"Template to write (save) data to disk ............................................................................................................ 142"
"Introduction to GUI using AWT/Swing ............................................................................................................... 143"
"Using Swing to create a small Window............................................................................................................... 143"
"Inserting Text inside Window ......................................................................................................................... 144"
"Creating a simple application implementing JButton, JTextfield and JLabel ................................................. 145"
""
""
""
""
"Riccardo Flask                                                                                                                                         4|Page"
"                  JAVA for Beginners"
""
"Introduction"
""
""
"About JAVA"
""
"“Java refers to a number of computer software products and specifications from Sun Microsystems"
"(the Java™ technology) that together provide a system for developing and deploying cross-platform"
"applications. Java is used in a wide variety of computing platforms spanning from embedded devices"
"and mobile phones on the low end to enterprise servers and super computers on the high end. Java"
"is fairly ubiquitous in mobile phones, Web servers and enterprise applications, and somewhat less"
"common in desktop applications, though users may have come across Java applets when browsing"
"the Web."
""
"Writing in the Java programming language is the primary way to produce code that will be deployed"
"as Java bytecode, though there are compilers available for other languages such as JavaScript,"
"Python and Ruby, and a native Java scripting language called Groovy. Java syntax borrows heavily"
"from C and C++ but it eliminates certain low-level constructs such as pointers and has a very simple"
"memory model where every object is allocated on the heap and all variables of object types are"
"references. Memory management is handled through integrated automatic garbage collection"
"performed by the Java Virtual Machine (JVM).”1"
""
""
"OOP – Object Oriented Programming"
""
"OOP is a particular style of programming which involves a particular way of designing solutions to"
"particular problems. Most modern programming languages, including Java, support this paradigm."
"When speaking about OOP one has to mention:"
""
"   Inheritance"
"   Modularity"
"   Polymorphism"
"   Encapsulation (binding code and its data)"
""
"However at this point it is too early to try to fully understand these concepts."
""
"This guide is divided into two major sections, the first section is an introduction to the language and"
"illustrates various examples of code while the second part goes into more detail."
""
""
""
""
"1"
"http://en.wikipedia.org/wiki/Java_%28Sun%29"
""
"Riccardo Flask                                                                           5|Page"
"                    JAVA for Beginners"
""
"Part 1 - Getting Started"
"The Java Development Kit – JDK"
"In order to get started in Java programming, one needs to get a recent copy of the Java JDK. This can"
"be obtained for free by downloading it from the Sun Microsystems website, http://java.sun.com/"
""
"Once you download and install this JDK you are ready to get started. You need a text editor as well"
"and Microsoft’s Notepad (standard with all Windows versions) suits fine."
""
"My first Java program"
"Open your text editor and type the following lines of code:"
""
""
""
"/*"
"This is known as a Block Comment."
"My first program                                 These lines are useful to the"
"programmer and are ignored by the"
"Version 1                                        Compiler"
"*/"
""
"public class Example1 {"
""
"public static void main (String args []) {"
""
"System.out.println (""My first Java program"");"
""
"}"
""
"}"
""
"Save the file as Example1.java2. The name of the program has to be similar to the filename."
"Programs are called classes. Please note that Java is case-sensitive. You cannot name a file"
"“Example.java” and then in the program you write “public class example”. It is good practice to"
"insert comments at the start of a program to help you as a programmer understand quickly what the"
"particular program is all about. This is done by typing “/*” at the start of the comment and “*/”"
"when you finish. The predicted output of this program is:"
""
"My first Java program"
""
"In order to get the above output we have to first compile the program and then execute the"
"compiled class. The applications required for this job are available as part of the JDK:"
""
"    javac.exe – compiles the program"
"    java.exe – the interpreter used to execute the compiled program"
""
"In order to compile and execute the program we need to switch to the command prompt. On"
"windows systems this can be done by clicking Start>Run>cmd"
""
"2"
"Ideally you should create a folder on the root disk (c:\) and save the file there"
""
"Riccardo Flask                                                                        6|Page"
"               JAVA for Beginners"
""
"At this point one needs some basic DOS commands in order to get to the directory (folder), where"
"the java class resides:"
""
"   cd\ (change directory)"
"   cd\[folder name] to get to the required folder/directory"
""
"When you get to the required destination you need to type the following:"
""
"c:\[folder name]\javac Example1.java"
""
"The above command will compile the java file and prompt the user with any errors. If the"
"compilation is successful a new file containing the bytecode is generated: Example1.class"
""
"To execute the program, we invoke the interpreter by typing:"
""
"c:\[folder name]\java Example1"
""
"The result will be displayed in the DOS window."
""
"Using an IDE"
"Some of you might already be frustrated by this point. However there is still hope as one can forget"
"about the command prompt and use an IDE (integrated development environment) to work with"
"Java programming. There are a number of IDE’s present, all of them are fine but perhaps some are"
"easier to work with than others. It depends on the user’s level of programming and tastes! The"
"following is a list of some of the IDE’s available:"
""
"   BlueJ – www.bluej.org (freeware)"
"   NetBeans – www.netbeans.org (freeware/open-source)"
"   JCreator – www.jcreator.com (freeware version available, pro version purchase required)"
"   Eclipse – www.eclipse.org (freeware/open-source)"
"   IntelliJ IDEA – www.jetbrains.com (trial/purchase required)"
"   JBuilder – www.borland.com (trial/purchase required)"
""
"Beginners might enjoy BlueJ and then move onto other IDE’s like JCreator, NetBeans, etc. Again it’s"
"just a matter of the user’s tastes and software development area."
""
""
""
""
"Riccardo Flask                                                                             7|Page"
"                   JAVA for Beginners"
""
"Variables and Data Types"
""
""
"Variables"
"A variable is a place where the program stores data temporarily. As the name implies the value"
"stored in such a location can be changed while a program is executing (compare with constant)."
""
"class Example2 {"
""
"public static void main(String args[]) {"
""
"int var1; // this declares a variable"
""
"int var2; // this declares another variable"
""
"var1 = 1024; // this assigns 1024 to var1"
""
"System.out.println(""var1 contains "" + var1);"
""
"var2 = var1 / 2;"
""
"System.out.print(""var2 contains var1 / 2: "");"
""
"System.out.println(var2);"
""
"}"
""
"}"
""
"Predicted Output:"
""
"var2 contains var1 / 2: 512"
""
"The above program uses two variables, var1 and var2. var1 is assigned a value directly while var2 is"
"filled up with the result of dividing var1 by 2, i.e. var2 = var1/2. The words int refer to a particular"
"data type, i.e. integer (whole numbers)."
""
""
" Test your skills – Example3"
"As we saw above, we used the ‘/’ to work out the quotient of var1 by 2. Given that ‘+’ would"
"perform addition, ‘-‘ subtraction and ‘*’ multiplication, write out a program which performs all the"
"named operations by using two integer values which are hard coded into the program."
""
"Hints:"
""
"    You need only two variables of type integer"
"    Make one variable larger and divisible by the other"
"    You can perform the required calculations directly in the print statements, remember to"
"enclose the operation within brackets, e.g. (var1-var2)"
""
""
""
"Riccardo Flask                                                                            8|Page"
"                 JAVA for Beginners"
""
"Mathematical Operators"
"As we saw in the preceding example there are particular symbols used to represent operators when"
"performing calculations:"
""
"Operator             Description     Example – given a is 15 and b is 6"
"+                  Addition       a + b, would return 21"
"-                 Subtraction     a - b, would return 9"
"*                Multiplication   a * b, would return 90"
"/                   Division      a / b, would return 2"
"%                  Modulus        a % b, would return 3 (the remainder)"
""
""
"class Example4 {"
""
"public static void main(String args[]) {"
""
"int iresult, irem;"
""
"double dresult, drem;"
""
"iresult = 10 / 3;"
""
"irem = 10 % 3;"
""
"dresult = 10.0 / 3.0;"
""
"drem = 10.0 % 3.0;"
""
"System.out.println(""Result and remainder of 10 / 3: "" +"
""
"iresult + "" "" + irem);"
""
"System.out.println(""Result and remainder of 10.0 / 3.0: """
"+ dresult + "" "" + drem);"
""
"}"
""
"}"
""
"Predicted Output:"
""
"Result and Remainder of 10/3: 3 1"
"Result and Remainder of 10.0/3.0: 3.3333333333333335 1"
""
"The difference in range is due to the data type since ‘double’ is a double precision 64-bit floating"
"point value."
""
"Logical Operators"
"These operators are used to evaluate an expression and depending on the operator used, a"
"particular output is obtained. In this case the operands must be Boolean data types and the result is"
"also Boolean. The following table shows the available logical operators:"
""
""
"Riccardo Flask                                                                           9|Page"
"                 JAVA for Beginners"
""
"Operator      Description"
"&          AND gate behaviour (0,0,0,1)"
"|          OR gate behaviour (0,1,1,1)"
"^          XOR – exclusive OR (0,1,1,0)"
"&&          Short-circuit AND"
"||          Short-circuit OR"
"!          Not"
""
""
"class Example5 {"
""
"public static void main(String args[]) {"
""
"int n, d;"
""
"n = 10;"
""
"d = 2;"
""
"if(d != 0 && (n % d) == 0)"
""
"System.out.println(d + "" is a factor of "" + n);"
""
"d = 0; // now, set d to zero"
""
"// Since d is zero, the second operand is not evaluated."
""
"if(d != 0 && (n % d) == 0)"
""
"System.out.println(d + "" is a factor of "" + n);"
""
"/* Now, try same thing without short-circuit operator."
""
"This will cause a divide-by-zero error."
""
"*/"
""
"if(d != 0 & (n % d) == 0)"
""
"System.out.println(d + "" is a factor of "" + n);"
""
"}"
""
"}"
""
"Predicted Output:"
""
"*Note if you try to execute the above program you will get an error (division by zero). To be able to"
"execute it, first comment the last two statements, compile and then execute."
""
"2 is a factor of 10"
""
""
""
"Riccardo Flask                                                                            10 | P a g e"
"                 JAVA for Beginners"
""
"Trying to understand the above program is a bit difficult, however the program highlights the main"
"difference in operation between a normal AND (&) and the short-circuit version (&&). In a normal"
"AND operation, both sides of the expression are evaluated, e.g."
""
"if(d != 0 & (n % d) == 0) – this returns an error as first d is compared to 0 to check inequality and then"
"the operation (n%d) is computed yielding an error! (divide by zero error)"
""
"The short circuit version is smarter since if the left hand side of the expression is false, this mean"
"that the output has to be false whatever there is on the right hand side of the expression, therefore:"
""
"if(d != 0 && (n % d) == 0) – this does not return an error as the (n%d) is not computed since d is"
"equal to 0, and so the operation (d!=0) returns false, causing the output to be false. Same applies for"
"the short circuit version of the OR."
""
"Character Escape Codes"
"The following codes are used to represents codes or characters which cannot be directly accessible"
"through a keyboard:"
""
"Code          Description"
"\n          New Line"
"\t          Tab"
"\b          Backspace"
"\r          Carriage Return"
"\\          Backslash"
"\’          Single Quotation Mark"
"\”          Double Quotation Mark"
"\*          Octal - * represents a number or Hex digit"
"\x*          Hex"
"\u*          Unicode, e.g. \u2122 = ™ (trademark symbol)"
""
""
"class Example6 {"
""
"public static void main(String args[]) {"
""
"System.out.println(""First line\nSecond line"");"
""
"System.out.println(""A\tB\tC"");"
""
"System.out.println(""D\tE\tF"") ;"
""
"}"
""
"}"
""
"Predicted Output:"
""
"First Line"
"Second Line"
"A    B    C"
"D    E    F"
""
"Riccardo Flask                                                                               11 | P a g e"
"                 JAVA for Beginners"
""
" Test your skills – Example7"
"Make a program which creates a sort of truth table to show the behaviour of all the logical operators"
"mentioned. Hints:"
""
"   You need two Boolean type variables which you will initially set both to false"
"   Use character escape codes to tabulate the results"
""
"The following program can be used as a guide:"
""
"class LogicTable {"
""
"public static void main(String args[]) {"
""
"boolean p, q;"
""
"System.out.println(""P\tQ\tPANDQ\tPORQ\tPXORQ\tNOTP"");"
""
"p = true; q = true;"
""
"System.out.print(p + ""\t"" + q +""\t"");"
""
"System.out.print((p&q) + ""\t"" + (p|q) + ""\t"");"
""
"System.out.println((p^q) + ""\t"" + (!p));"
""
"p = true; q = false;"
""
"System.out.print(p + ""\t"" + q +""\t"");"
""
"System.out.print((p&q) + ""\t"" + (p|q) + ""\t"");"
""
"System.out.println((p^q) + ""\t"" + (!p));"
""
"p = false; q = true;"
""
"System.out.print(p + ""\t"" + q +""\t"");"
""
"System.out.print((p&q) + ""\t"" + (p|q) + ""\t"");"
""
"System.out.println((p^q) + ""\t"" + (!p));"
""
"p = false; q = false;"
""
"System.out.print(p + ""\t"" + q +""\t"");"
""
"System.out.print((p&q) + ""\t"" + (p|q) + ""\t"");"
""
"System.out.println((p^q) + ""\t"" + (!p));"
""
"}"
""
"}"
""
""
"Riccardo Flask                                                                           12 | P a g e"
"                 JAVA for Beginners"
""
"Predicted Output:"
""
"P            Q             PANDQ         PORQ             PXORQ     NOTP"
""
"true         true          true          true             false     fals"
""
"true         false         false         true             true      fals"
""
"false        true          false         true             true      true"
""
"false        false         false         false            false     true"
""
""
""
"Data Types"
"The following is a list of Java’s primitive data types:"
""
"Data Type        Description"
"int              Integer – 32bit ranging from -2,147,483,648 to 2,147,483,648"
"byte             8-bit integer ranging from -128 to 127"
"short            16-bit integer ranging from -32,768 to 32,768"
"long             64-bit integer from -9,223,372,036,854,775,808 to -9,223,372,036,854,775,808"
""
"float            Single-precision floating point, 32-bit"
"double           Double-precision floating point, 64-bit"
""
"char             Character , 16-bit unsigned ranging from 0 to 65,536 (Unicode)"
""
"boolean          Can be true or false only"
""
""
"The ‘String’ type has not been left out by mistake. It is not a primitive data type, but strings (a"
"sequence of characters) in Java are treated as Objects."
""
"class Example8 {"
""
"public static void main(String args[]) {"
""
"int var; // this declares an int variable"
""
"double x; // this declares a floating-point variable"
""
"var = 10; // assign var the value 10"
""
"x = 10.0; // assign x the value 10.0"
""
"System.out.println(""Original value of var: "" + var);"
""
"System.out.println(""Original value of x: "" + x);"
""
"System.out.println(); // print a blank line"
""
""
"Riccardo Flask                                                                                13 | P a g e"
"                 JAVA for Beginners"
""
"// now, divide both by 4"
""
"var = var / 4;"
""
"x = x / 4;"
""
"System.out.println(""var after division: "" + var);"
""
"System.out.println(""x after division: "" + x);"
""
"}"
""
"}"
""
"Predicted output:"
""
"Original value of var: 10"
""
"Original value of x: 10.0"
""
""
""
"var after division: 2"
""
"x after division: 2.5"
""
"One here has to note the difference in precision of the different data types. The following example"
"uses the character data type. Characters in Java are encoded using Unicode giving a 16-bit range, or"
"a total of 65,537 different codes."
""
""
""
"class Example9 {"
""
"public static void main(String args[]) {"
""
"char ch;"
""
"ch = 'X';"
""
"System.out.println(""ch contains "" + ch);"
""
"ch++; // increment ch"
""
"System.out.println(""ch is now "" + ch);"
""
"ch = 90; // give ch the value Z"
""
"System.out.println(""ch is now "" + ch);"
""
"}"
""
"}"
""
""
"Riccardo Flask                                                                           14 | P a g e"
"                 JAVA for Beginners"
""
"Predicted Output:"
""
"ch is now X"
"ch is now Y"
"ch is now Z"
""
"The character ‘X’ is encoded as the number 88, hence when we increment ‘ch’, we get character"
"number 89, or ‘Y’."
""
"The Boolean data type can be either TRUE or FALSE. It can be useful when controlling flow of a"
"program by assigning the Boolean data type to variables which function as flags. Thus program flow"
"would depend on the condition of these variables at the particular instance. Remember that the"
"output of a condition is always Boolean."
""
"class Example10 {"
""
"public static void main(String args[]) {"
""
"boolean b;"
""
"b = false;"
""
"System.out.println(""b is "" + b);"
""
"b = true;"
""
"System.out.println(""b is "" + b);"
""
"// a boolean value can control the if statement"
""
"if(b) System.out.println(""This is executed."");"
""
"b = false;"
""
"if(b) System.out.println(""This is not executed."");"
""
"// outcome of a relational operator is a boolean value"
""
"System.out.println(""10 > 9 is "" + (10 > 9));"
""
"}"
""
"}"
""
"Predicted output:"
""
"b is   false"
"b is   true"
"This   is executed"
"10 >   9 is true"
""
""
""
"Riccardo Flask                                                                         15 | P a g e"
"                 JAVA for Beginners"
""
"Introducing Control Statements"
"These statements will be dealt with in more detail further on in this booklet. For now we will learn"
"about the if and the for loop."
""
""
""
"class Example11 {"
""
"public static void main(String args[]) {"
""
"int a,b,c;"
""
"a = 2;"
""
"b = 3;"
""
"c = a - b;"
""
"if (c >= 0) System.out.println(""c is a positive number"");"
""
"if (c < 0) System.out.println(""c is a negative number"");"
""
"System.out.println();"
""
"c = b - a;"
""
"if (c >= 0) System.out.println(""c is a positive number"");"
""
"if (c < 0) System.out.println(""c is a negative number"");"
""
"}"
""
"}"
""
"Predicted output:"
""
"c is a negative number"
"c is a positive number"
""
""
""
"The ‘if’ statement evaluates a condition and if the result is true, then the following statement/s are"
"executed, else they are just skipped (refer to program output). The line System.out.println() simply"
"inserts a blank line. Conditions use the following comparison operators:"
""
"Operator      Description"
"<         Smaller than"
">         Greater than"
"<=          Smaller or equal to, (a<=3) : if a is 2 or 3, then result of comparison is TRUE"
">=          Greater or equal to, (a>=3) : if a is 3 or 4, then result of comparison is TRUE"
